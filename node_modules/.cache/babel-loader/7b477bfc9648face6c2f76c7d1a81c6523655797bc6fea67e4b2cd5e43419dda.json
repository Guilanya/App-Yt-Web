{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bielg\\\\Desktop\\\\Joviat\\\\grau superior\\\\2\\\\m7\\\\app-yt-web\\\\src\\\\screen\\\\Video.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Video() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el id del video desde la URL\n  const [video, setVideo] = useState(null);\n  useEffect(() => {\n    const fetchVideo = async () => {\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\n      const videoSnapshot = await getDoc(videoDoc);\n      if (videoSnapshot.exists()) {\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\n      } else {\n        console.log(\"Video no encontrado\");\n      }\n    };\n    fetchVideo();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: video ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/gT1oEOVACII}` // Asegúrate de que 'video.url' contiene el ID de YouTube\n        ,\n        title: video.title,\n        frameBorder: \"0\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando video...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Video, \"RG0ErwedS5eFSibN+BhNNVhoick=\", false, function () {\n  return [useParams];\n});\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["React","useEffect","useState","useParams","db","doc","getDoc","jsxDEV","_jsxDEV","Video","_s","id","video","setVideo","fetchVideo","videoDoc","videoSnapshot","exists","data","console","log","children","title","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/bielg/Desktop/Joviat/grau superior/2/m7/app-yt-web/src/screen/Video.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nfunction Video() {\r\n  const { id } = useParams(); // Obtiene el id del video desde la URL\r\n  const [video, setVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchVideo = async () => {\r\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\r\n      const videoSnapshot = await getDoc(videoDoc);\r\n      if (videoSnapshot.exists()) {\r\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\r\n      } else {\r\n        console.log(\"Video no encontrado\");\r\n      }\r\n    };\r\n\r\n    fetchVideo();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {video ? (\r\n        <div>\r\n          <h2>{video.title}</h2>\r\n          <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src={`https://www.youtube.com/embed/gT1oEOVACII}`} // Asegúrate de que 'video.url' contiene el ID de YouTube\r\n            title={video.title}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n          />\r\n        </div>\r\n      ) : (\r\n        <p>Cargando video...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,EAAE,QAAQ,aAAa,CAAC,CAAC;AAClC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAGV,GAAG,CAACD,EAAE,EAAE,QAAQ,EAAEO,EAAE,CAAC,CAAC,CAAC;MACxC,MAAMK,aAAa,GAAG,MAAMV,MAAM,CAACS,QAAQ,CAAC;MAC5C,IAAIC,aAAa,CAACC,MAAM,CAAC,CAAC,EAAE;QAC1BJ,QAAQ,CAACG,aAAa,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAa,QAAA,EACGT,KAAK,gBACJJ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKT,KAAK,CAACU;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBlB,OAAA;QACEmB,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZC,GAAG,EAAE,4CAA6C,CAAC;QAAA;QACnDP,KAAK,EAAEV,KAAK,CAACU,KAAM;QACnBQ,WAAW,EAAC,GAAG;QACfC,eAAe;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENlB,OAAA;MAAAa,QAAA,EAAG;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CArCQD,KAAK;EAAA,QACGN,SAAS;AAAA;AAAA6B,EAAA,GADjBvB,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}