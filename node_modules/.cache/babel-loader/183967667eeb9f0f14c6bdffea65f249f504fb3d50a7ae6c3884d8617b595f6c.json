{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bielg\\\\Desktop\\\\Joviat\\\\grau superior\\\\2\\\\m7\\\\app-yt-web\\\\src\\\\screen\\\\Video.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useNavigate\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\nimport { doc, getDoc } from 'firebase/firestore';\nimport './Video.css'; // Importa el archivo de estilos CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Video() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el id del video desde la URL\n  const [video, setVideo] = useState(null);\n  const navigate = useNavigate(); // Hook de React Router para navegación\n\n  useEffect(() => {\n    const fetchVideo = async () => {\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\n      const videoSnapshot = await getDoc(videoDoc);\n      if (videoSnapshot.exists()) {\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\n      } else {\n        console.log(\"Video no encontrado\");\n      }\n    };\n    fetchVideo();\n  }, [id]);\n\n  // Verifica si el ID del video es válido antes de mostrar el iframe\n  const getYouTubeUrl = videoUrl => {\n    // Si video.url es una URL completa de YouTube\n    if (videoUrl.includes('youtube.com')) {\n      // Extrae el ID del video\n      const videoId = videoUrl.split('v=')[1].split('&')[0];\n      return `https://www.youtube.com/embed/${videoId}`;\n    }\n    // Si ya es solo el ID del video\n    return `https://www.youtube.com/embed/${videoUrl}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: () => navigate('/') // Redirige a la página principal\n        ,\n        children: \"Volver al inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), video ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: getYouTubeUrl(video.url) // Usa la función para obtener la URL del iframe\n          ,\n          title: video.title,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Video, \"HHNUbucTDDFdtjGm0Q5CDFElU2w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","db","doc","getDoc","jsxDEV","_jsxDEV","Video","_s","id","video","setVideo","navigate","fetchVideo","videoDoc","videoSnapshot","exists","data","console","log","getYouTubeUrl","videoUrl","includes","videoId","split","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","src","url","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/bielg/Desktop/Joviat/grau superior/2/m7/app-yt-web/src/screen/Video.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useNavigate\r\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\r\nimport { doc, getDoc } from 'firebase/firestore';\r\nimport './Video.css'; // Importa el archivo de estilos CSS\r\n\r\nfunction Video() {\r\n  const { id } = useParams(); // Obtiene el id del video desde la URL\r\n  const [video, setVideo] = useState(null);\r\n  const navigate = useNavigate(); // Hook de React Router para navegación\r\n\r\n  useEffect(() => {\r\n    const fetchVideo = async () => {\r\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\r\n      const videoSnapshot = await getDoc(videoDoc);\r\n      if (videoSnapshot.exists()) {\r\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\r\n      } else {\r\n        console.log(\"Video no encontrado\");\r\n      }\r\n    };\r\n\r\n    fetchVideo();\r\n  }, [id]);\r\n\r\n  // Verifica si el ID del video es válido antes de mostrar el iframe\r\n  const getYouTubeUrl = (videoUrl) => {\r\n    // Si video.url es una URL completa de YouTube\r\n    if (videoUrl.includes('youtube.com')) {\r\n      // Extrae el ID del video\r\n      const videoId = videoUrl.split('v=')[1].split('&')[0];\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    }\r\n    // Si ya es solo el ID del video\r\n    return `https://www.youtube.com/embed/${videoUrl}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Botón de volver al inicio */}\r\n      <div className=\"add-video-container\">\r\n        <button\r\n          className=\"back-btn\"\r\n          onClick={() => navigate('/')} // Redirige a la página principal\r\n        >\r\n          Volver al inicio\r\n        </button>\r\n\r\n        {video ? (\r\n          <div>\r\n            <h2>{video.title}</h2>\r\n            <iframe\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src={getYouTubeUrl(video.url)} // Usa la función para obtener la URL del iframe\r\n              title={video.title}\r\n              frameBorder=\"0\"\r\n              allowFullScreen\r\n            />\r\n          </div>\r\n        ) : (\r\n          <p>Cargando video...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}