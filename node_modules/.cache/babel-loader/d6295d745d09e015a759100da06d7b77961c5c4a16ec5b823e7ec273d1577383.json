{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bielg\\\\Desktop\\\\Joviat\\\\grau superior\\\\2\\\\m7\\\\app-yt-web\\\\src\\\\screen\\\\Video.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useNavigate\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Video() {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el id del video desde la URL\n  const [video, setVideo] = useState(null);\n  const navigate = useNavigate(); // Hook de React Router para navegación\n\n  useEffect(() => {\n    const fetchVideo = async () => {\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\n      const videoSnapshot = await getDoc(videoDoc);\n      if (videoSnapshot.exists()) {\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\n      } else {\n        console.log(\"Video no encontrado\");\n      }\n    };\n    fetchVideo();\n  }, [id]);\n\n  // Verifica si el ID del video es válido antes de mostrar el iframe\n  const getYouTubeUrl = videoUrl => {\n    // Si video.url es una URL completa de YouTube\n    if (videoUrl.includes('youtube.com')) {\n      // Extrae el ID del video\n      const videoId = videoUrl.split('v=')[1].split('&')[0];\n      return `https://www.youtube.com/embed/${videoId}`;\n    }\n    // Si ya es solo el ID del video\n    return `https://www.youtube.com/embed/${videoUrl}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/') // Redirige a la página principal\n      ,\n      style: {\n        background: 'none',\n        border: 'none',\n        fontSize: '24px',\n        cursor: 'pointer',\n        color: '#007bff',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" Volver al inicio\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), video ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: getYouTubeUrl(video.url) // Usa la función para obtener la URL del iframe\n        ,\n        title: video.title,\n        frameBorder: \"0\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando video...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Video, \"HHNUbucTDDFdtjGm0Q5CDFElU2w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","db","doc","getDoc","jsxDEV","_jsxDEV","Video","_s","id","video","setVideo","navigate","fetchVideo","videoDoc","videoSnapshot","exists","data","console","log","getYouTubeUrl","videoUrl","includes","videoId","split","children","onClick","style","background","border","fontSize","cursor","color","marginBottom","className","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","src","url","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/bielg/Desktop/Joviat/grau superior/2/m7/app-yt-web/src/screen/Video.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; // Importa useNavigate\r\nimport { db } from '../firebase'; // Asegúrate de importar la instancia de Firebase\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nfunction Video() {\r\n  const { id } = useParams(); // Obtiene el id del video desde la URL\r\n  const [video, setVideo] = useState(null);\r\n  const navigate = useNavigate(); // Hook de React Router para navegación\r\n\r\n  useEffect(() => {\r\n    const fetchVideo = async () => {\r\n      const videoDoc = doc(db, 'videos', id); // Obtiene el documento del video por el id\r\n      const videoSnapshot = await getDoc(videoDoc);\r\n      if (videoSnapshot.exists()) {\r\n        setVideo(videoSnapshot.data()); // Establece los datos del video en el estado\r\n      } else {\r\n        console.log(\"Video no encontrado\");\r\n      }\r\n    };\r\n\r\n    fetchVideo();\r\n  }, [id]);\r\n\r\n  // Verifica si el ID del video es válido antes de mostrar el iframe\r\n  const getYouTubeUrl = (videoUrl) => {\r\n    // Si video.url es una URL completa de YouTube\r\n    if (videoUrl.includes('youtube.com')) {\r\n      // Extrae el ID del video\r\n      const videoId = videoUrl.split('v=')[1].split('&')[0];\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    }\r\n    // Si ya es solo el ID del video\r\n    return `https://www.youtube.com/embed/${videoUrl}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        onClick={() => navigate('/')} // Redirige a la página principal\r\n        style={{\r\n          background: 'none',\r\n          border: 'none',\r\n          fontSize: '24px',\r\n          cursor: 'pointer',\r\n          color: '#007bff',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        <i className=\"fas fa-arrow-left\"></i> Volver al inicio\r\n      </button>\r\n\r\n      {video ? (\r\n        <div>\r\n          <h2>{video.title}</h2>\r\n          <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src={getYouTubeUrl(video.url)} // Usa la función para obtener la URL del iframe\r\n            title={video.title}\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n          />\r\n        </div>\r\n      ) : (\r\n        <p>Cargando video...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}